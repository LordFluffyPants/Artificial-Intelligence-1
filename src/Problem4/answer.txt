A) Can a simple reflex agent be perfectly rational for this environment?
	A simple reflex agent can not preform rationaly in this environment because it has no way of knowing the environment that it is in. Making the deterministic agent not able to preform rationaly.

B) Can a simple reflex agent with a randomized agent function outpreform a simple reflex agent? 
	A simple randomized reflex agent can outpreform a simple reflex agent because of unkown environemts to the agent. For the vacuum example the agent will fail forever if it starts in the left room and the agent tries to go left. With a simple random reflex agent it can then pick at random a room to go to. Thus giving a solution making it outpreform the simple reflex agent.
	//TODO design the agent and check its results 

C) Can you design an environment where the randomized agent will preform poorly?
	The simple design would be a big room with only one square the would be dirty (in the vacuum example) as far away from the starting position of the robot. This would mean that the robot would then have at most a 50% chance of moving in the right direction and at least a 25% chance (in a room where you can move cardinaly). This means that the robot has at most a 75% chance of moving in the wrong direction and at least a 50% chance. This would make the robot have a higher chance to move away from the goal and reach the end of its life cycle. If you also throw in obsticals for the robot then it increases the likely hood that the robot will make a decision where it cannot go and thus will waste on of its life cycles.
	//TODO get results 

D) Can a reflex agent with state outpreform a simple reflex agent? Design such an agent and measure its performace on several environments. Can you design a rational agent of this type?
	A simple reflex agent with state can outpreform a simple reflex agent because it will keep track of the previous states that it has been in and then use that knowledge to make better choices for it's actions. In the vacuum example there will be less back tracking and more advancing to the unexplored rooms.

